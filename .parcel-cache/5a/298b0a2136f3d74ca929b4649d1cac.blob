var helpers = require("../../../../../.nvm/versions/node/v15.14.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MovieView", function () {
    return MovieView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapCard = require('react-bootstrap/Card');
  var _reactBootstrapCardDefault = _parcelHelpers.interopDefault(_reactBootstrapCard);
  var _jsxFileName = "/home/giuseppe/Desktop/myMovies-client/src/components/movie-view/movie-view.jsx";
  class MovieView extends _reactDefault.default.Component {
    render() {
      const {movie, onBackClick} = this.props;
      return (
        /*#__PURE__*/
        /*<div className="movie-view">
        <div className="movie-title">
        <span className="label">Title: </span>
        <span className="value">{movie.title}</span>
        </div>
        <div className="movie-description">
        <span className="label">Description: </span>
        <span className="value">{movie.description}</span>
        </div>
        <div className="movie-view">
        <div className="movie-poster">
        <img src="{movie.image}"/>
        </div>
        </div>
        <button onClick={() => { onBackClick(null); }}>Back</button>
        
        </div>)
        
        */
        _reactDefault.default.createElement(_reactBootstrapCardDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 31,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Img, {
          variant: "top",
          src: movie.image,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 32,
            columnNumber: 15
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Body, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 33,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Title, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 34,
            columnNumber: 17
          }
        }, movie.title), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Title, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 35,
            columnNumber: 17
          }
        }, "Rating: ", movie.Rating), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapCardDefault.default.Text, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 36,
            columnNumber: 17
          }
        }, movie.description), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          onClick: () => onBackClick(null),
          variant: "link",
          variant: "dark",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 37,
            columnNumber: 17
          }
        }, "Back")))
      );
    }
  }
  MovieView.propTypes = {
    movie: _propTypesDefault.default.shape({
      title: _propTypesDefault.default.string.isRequired,
      description: _propTypesDefault.default.string.isRequired,
      genre: _propTypesDefault.default.string.isRequired,
      director: _propTypesDefault.default.string.isRequired,
      imagePath: _propTypesDefault.default.string.isRequired
    }).isRequired,
    onClick: _propTypesDefault.default.func.isRequired
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
