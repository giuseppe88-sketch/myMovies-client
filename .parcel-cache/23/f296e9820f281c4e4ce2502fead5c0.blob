var helpers = require("../../../../../.nvm/versions/node/v15.14.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MainView", function () {
    return MainView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactBootstrap = require('react-bootstrap');
  var _reactRouterDom = require("react-router-dom");
  var _reactBootstrapRow = require('react-bootstrap/Row');
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _reactBootstrapCol = require('react-bootstrap/Col');
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _registrationViewRegistrationView = require('../registration-view/registration-view');
  var _loginViewLoginView = require('../login-view/login-view');
  var _movieCardMovieCard = require('../movie-card/movie-card');
  var _movieViewMovieView = require('../movie-view/movie-view');
  var _directorViewDirectorView = require('../director-view/director-view');
  var _genreViewGenreView = require('../genre-view/genre-view');
  var _actorViewActorView = require('../actor-view/actor-view');
  var _profileViewProfileView = require('../profile-view/profile-view');
  var _jsxFileName = "/home/giuseppe/Desktop/myMovies-client/src/components/main-view/main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {
        movies: [],
        selectedMovie: null,
        user: null,
        directors: [],
        genres: [],
        actors: [],
        favoritesMovies: []
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem('token');
      if (accessToken !== null) {
        this.setState({
          user: localStorage.getItem('user')
        });
        this.getMovies(accessToken);
        this.getDirectors(accessToken);
        this.getGenres(accessToken);
        this.getActors(accessToken);
        this.getUsersFav(accessToken);
      }
    }
    setSelectedMovie(newSelectedMovie) {
      this.setState({
        selectedMovie: newSelectedMovie
      });
    }
    onRegisterIn(user) {
      this.setState({
        user
      });
    }
    onLoggedIn(authData) {
      console.log(authData);
      this.setState({
        user: authData.user.username
      });
      localStorage.setItem('token', authData.token);
      localStorage.setItem('user', authData.user.username);
      this.getMovies(authData.token);
      this.getDirectors(authData.token);
      this.getGenres(authData.token);
      this.getActors(authData.token);
      this.getUsersFav(authData.token);
    }
    onLoggedOut() {
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      this.setState({
        user: null
      });
    }
    getMovies(token) {
      _axiosDefault.default.get('https://mymovies-db-api.herokuapp.com/movies', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // assign result to the state
        this.setState({
          movies: response.data
        });
      }).catch(function (error) {
        console.log(error);
      });
    }
    getDirectors(token) {
      _axiosDefault.default.get('https://mymovies-db-api.herokuapp.com/directors', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // assign result to the state
        this.setState({
          directors: response.data
        });
      }).catch(function (error) {
        console.log(error);
      });
    }
    getGenres(token) {
      _axiosDefault.default.get('https://mymovies-db-api.herokuapp.com/genres', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // assign result to the state
        this.setState({
          genres: response.data
        });
        console.log(response.data);
      }).catch(function (error) {
        console.log(error);
      });
    }
    getActors(token) {
      _axiosDefault.default.get('https://mymovies-db-api.herokuapp.com/actors', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // assign result to the state
        this.setState({
          actors: response.data
        });
        console.log(response.data);
      }).catch(function (error) {
        console.log(error);
      });
    }
    getUsersFav(token) {
      _axiosDefault.default.get('https://mymovies-db-api.herokuapp.com/users/' + localStorage.getItem('user'), {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        this.setState({
          favoritesMovies: response.data.favoritesMovies
        });
      });
    }
    render() {
      const {movies, user, directors, genres, actors, favoritesMovies} = this.state;
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 164,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(Navbar, {
          bg: "light",
          expand: "lg",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 165,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(Navbar.Brand, {
          href: "#home",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 166,
            columnNumber: 3
          }
        }, "React-Bootstrap"), /*#__PURE__*/_reactDefault.default.createElement(Navbar.Toggle, {
          "aria-controls": "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 167,
            columnNumber: 3
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(Navbar.Collapse, {
          id: "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 168,
            columnNumber: 3
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Nav, {
          className: "mr-auto",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 169,
            columnNumber: 5
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Nav.Link, {
          href: "#home",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 170,
            columnNumber: 7
          }
        }, "Home"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Nav.Link, {
          href: "#link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 171,
            columnNumber: 7
          }
        }, "Link"), /*#__PURE__*/_reactDefault.default.createElement(NavDropdown, {
          title: "Dropdown",
          id: "basic-nav-dropdown",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 172,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(NavDropdown.Item, {
          href: "#action/3.1",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 173,
            columnNumber: 9
          }
        }, "Action"), /*#__PURE__*/_reactDefault.default.createElement(NavDropdown.Item, {
          href: "#action/3.2",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 174,
            columnNumber: 9
          }
        }, "Another action"), /*#__PURE__*/_reactDefault.default.createElement(NavDropdown.Item, {
          href: "#action/3.3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 175,
            columnNumber: 9
          }
        }, "Something"), /*#__PURE__*/_reactDefault.default.createElement(NavDropdown.Divider, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 176,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(NavDropdown.Item, {
          href: "#action/3.4",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 177,
            columnNumber: 9
          }
        }, "Separated link"))), /*#__PURE__*/_reactDefault.default.createElement(Form, {
          inline: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 180,
            columnNumber: 5
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(FormControl, {
          type: "text",
          placeholder: "Search",
          className: "mr-sm-2",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 181,
            columnNumber: 7
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "outline-success",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 182,
            columnNumber: 7
          }
        }, "Search")))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 186,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 188,
                  columnNumber: 35
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 189,
                  columnNumber: 17
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 191,
                  columnNumber: 47
                }
              })
            );
            return movies.map(m => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              md: 3,
              key: m._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 193,
                columnNumber: 17
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_movieCardMovieCard.MovieCard, {
              movieData: m,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 194,
                columnNumber: 19
              }
            })));
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 187,
            columnNumber: 15
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/register",
          render: () => {
            if (user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Redirect, {
                to: "/",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 199,
                  columnNumber: 33
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 200,
                  columnNumber: 21
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 201,
                  columnNumber: 17
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 198,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 205,
                  columnNumber: 38
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 206,
                  columnNumber: 21
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 208,
                  columnNumber: 51
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 209,
                  columnNumber: 28
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
                movie: movies.find(m => m._id === match.params.movieId),
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 210,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 204,
            columnNumber: 17
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 214,
                  columnNumber: 37
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 215,
                  columnNumber: 20
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 217,
                  columnNumber: 52
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 218,
                  columnNumber: 24
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
                director: directors.find(m => m.directors.name === match.params.name).directors,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 219,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 213,
            columnNumber: 16
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/directors",
          render: () => {
            console.log(directors);
            return directors.map(m => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              md: 3,
              key: m._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 227,
                columnNumber: 17
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
              directorData: m,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 228,
                columnNumber: 21
              }
            })));
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 223,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/genres",
          render: () => {
            console.log(genres);
            return genres.map(m => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              md: 3,
              key: m._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 236,
                columnNumber: 17
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
              genresData: m,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 237,
                columnNumber: 21
              }
            })));
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 233,
            columnNumber: 14
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/genres/:name",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 244,
                  columnNumber: 31
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 245,
                  columnNumber: 15
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 247,
                  columnNumber: 45
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 248,
                  columnNumber: 20
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
                genre: movies.find(m => m.genre.name === match.params.name).genre,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 249,
                  columnNumber: 15
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 243,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/actors",
          render: () => {
            console.log(actors);
            return actors.map(m => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              md: 3,
              key: m._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 256,
                columnNumber: 17
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_actorViewActorView.ActorView, {
              actorsData: m,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 257,
                columnNumber: 21
              }
            })));
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 253,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/users",
          render: () => {
            console.log(favoritesMovies);
            return favoritesMovies.map(m => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              md: 3,
              key: m._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 266,
                columnNumber: 17
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileView.ProfileView, {
              userData: m,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 267,
                columnNumber: 21
              }
            })));
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 262,
            columnNumber: 14
          }
        })))
      );
    }
  }
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
