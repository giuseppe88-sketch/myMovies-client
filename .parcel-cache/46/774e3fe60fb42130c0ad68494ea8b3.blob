var helpers = require("../../../../../.nvm/versions/node/v15.14.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "RegistrationView", function () {
    return RegistrationView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('react-dom');
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  require('react-bootstrap/Form');
  require('react-bootstrap/Button');
  var _mdbreact = require('mdbreact');
  var _jsxFileName = "/home/giuseppe/Desktop/myMovies-client/src/components/registration-view/registration-view.jsx", _s = $RefreshSig$();
  function RegistrationView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const submitRequest = e => {
      e.preventDefault();
      console.log(username, password, email);
      /*Send a request to the server for authentication*/
      /*then call props.onLoggedIn(username)*/
      props.onRegisterIn(username);
    };
    return (
      /*#__PURE__*/
      /*<Form>
      <Form.Group controlId="formUsername">
      <Form.Label>Username: </Form.Label>
      <Form.Control type="text" onChange={e => setUsername(e.target.value)} />
      </Form.Group>
      
      <Form.Group controlId="formPassword">
      <Form.Label>Password: </Form.Label>
      <Form.Control type="password" onChange={e => setPassword(e.target.value)} />
      </Form.Group>
      
      <Form.Group controlId="formEmail">
      <Form.Label>Email: </Form.Label>
      <Form.Control type="text" onChange={e => setEmail(e.target.value)} />
      </Form.Group>
      
      <Button variant="primary" type="submit" onClick={submitRequest}>
      Submit
      </Button>
      </Form>*/
      _reactDefault.default.createElement(_mdbreact.MDBContainer, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBRow, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBCol, {
        md: "6",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBCard, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47,
          columnNumber: 11
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBCardBody, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("form", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49,
          columnNumber: 15
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "h4 text-center py-4",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 17
        }
      }, "Sign up"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "grey-text",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBInput, {
        label: "Your name",
        icon: "user",
        group: true,
        type: "text",
        validate: true,
        error: "wrong",
        success: "right",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52,
          columnNumber: 19
        }
      }), /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBInput, {
        label: "Your email",
        icon: "envelope",
        group: true,
        type: "email",
        validate: true,
        error: "wrong",
        success: "right",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61,
          columnNumber: 19
        }
      }), /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBInput, {
        label: "Confirm your email",
        icon: "exclamation-triangle",
        group: true,
        type: "text",
        validate: true,
        error: "wrong",
        success: "right",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 70,
          columnNumber: 19
        }
      }), /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBInput, {
        label: "Your password",
        icon: "lock",
        group: true,
        type: "password",
        validate: true,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 79,
          columnNumber: 19
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "text-center py-4 mt-3",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_mdbreact.MDBBtn, {
        color: "cyan",
        type: "submit",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 88,
          columnNumber: 19
        }
      }, "Register"))))))))
    );
  }
  _s(RegistrationView, "c5OQw7/hScRZ/uRg/4sVGfm839o=");
  _c = RegistrationView;
  RegistrationView.propTypes = {
    user: _propTypesDefault.default.shape({
      username: _propTypesDefault.default.string.isRequired,
      password: _propTypesDefault.default.string.isRequired
    }),
    onRegisterIn: _propTypesDefault.default.func.isRequired
  };
  var _c;
  $RefreshReg$(_c, "RegistrationView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
